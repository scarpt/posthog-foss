services:
    db:
        extends:
            file: docker-compose.base.yml
            service: db
        image: ${DOCKER_REGISTRY_PREFIX:-}postgres:12-alpine
        volumes:
            - postgres-data:/var/lib/postgresql/data
        # No exposed ports - internal only

    redis:
        extends:
            file: docker-compose.base.yml
            service: redis
        volumes:
            - redis-data:/data

    redis7:
        extends:
            file: docker-compose.base.yml
            service: redis7
        volumes:
            - redis7-data:/data

    clickhouse:
        extends:
            file: docker-compose.base.yml
            service: clickhouse
        restart: on-failure
        depends_on:
            - kafka
            - zookeeper
        volumes:
            - ./posthog/posthog/idl:/idl
            - ./posthog/docker/clickhouse/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
            - ./posthog/docker/clickhouse/config.xml:/etc/clickhouse-server/config.xml
            - ./posthog/docker/clickhouse/users.xml:/etc/clickhouse-server/users.xml
            - clickhouse-data:/var/lib/clickhouse

    zookeeper:
        extends:
            file: docker-compose.base.yml
            service: zookeeper
        volumes:
            - zookeeper-datalog:/datalog
            - zookeeper-data:/data
            - zookeeper-logs:/logs

    kafka:
        extends:
            file: docker-compose.base.yml
            service: kafka
        depends_on:
            - zookeeper
        environment:
            KAFKA_LOG_RETENTION_MS: 3600000
            KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 300000
            KAFKA_LOG_RETENTION_HOURS: 1
        volumes:
            - kafka-data:/bitnami/kafka

    worker:
        extends:
            file: docker-compose.base.yml
            service: worker
        environment:
            SENTRY_DSN: $SENTRY_DSN
            SITE_URL: https://$DOMAIN
            SECRET_KEY: $POSTHOG_SECRET
            OBJECT_STORAGE_ACCESS_KEY_ID: 'object_storage_root_user'
            OBJECT_STORAGE_SECRET_ACCESS_KEY: 'object_storage_root_password'
            OBJECT_STORAGE_ENDPOINT: http://objectstorage:19000
            OBJECT_STORAGE_ENABLED: true
            ENCRYPTION_SALT_KEYS: $ENCRYPTION_SALT_KEYS
        image: $REGISTRY_URL:$POSTHOG_APP_TAG

    web:
        extends:
            file: docker-compose.base.yml
            service: web
        command: /compose/start
        volumes:
            - ./compose:/compose
        image: $REGISTRY_URL:$POSTHOG_APP_TAG
        environment:
            SENTRY_DSN: $SENTRY_DSN
            SITE_URL: https://$DOMAIN
            SECRET_KEY: $POSTHOG_SECRET
            OBJECT_STORAGE_ACCESS_KEY_ID: 'object_storage_root_user'
            OBJECT_STORAGE_SECRET_ACCESS_KEY: 'object_storage_root_password'
            OBJECT_STORAGE_ENDPOINT: http://objectstorage:19000
            OBJECT_STORAGE_ENABLED: true
            ENCRYPTION_SALT_KEYS: $ENCRYPTION_SALT_KEYS
            DISABLE_SECURE_SSL_REDIRECT: 'true'  # Because Nginx handles SSL
            IS_BEHIND_PROXY: 'true'
            TRUST_ALL_PROXIES: True
        networks:
            - default
        expose:
            - "8000"  # Only exposed to internal network
        depends_on:
            - db
            - redis
            - clickhouse
            - kafka
            - objectstorage

    plugins:
        extends:
            file: docker-compose.base.yml
            service: plugins
        image: $REGISTRY_URL:$POSTHOG_APP_TAG
        environment:
            SENTRY_DSN: $SENTRY_DSN
            SITE_URL: https://$DOMAIN
            SECRET_KEY: $POSTHOG_SECRET
            OBJECT_STORAGE_ACCESS_KEY_ID: 'object_storage_root_user'
            OBJECT_STORAGE_SECRET_ACCESS_KEY: 'object_storage_root_password'
            OBJECT_STORAGE_ENDPOINT: http://objectstorage:19000
            OBJECT_STORAGE_ENABLED: true
            CDP_REDIS_HOST: redis7
            CDP_REDIS_PORT: 6379
            ENCRYPTION_SALT_KEYS: $ENCRYPTION_SALT_KEYS

    objectstorage:
        extends:
            file: docker-compose.base.yml
            service: objectstorage
        restart: on-failure
        volumes:
            - objectstorage:/data
        expose:
            - "19000"
            - "19001"

    # ... other services remain the same but without exposed ports ...

volumes:
    zookeeper-data:
    zookeeper-datalog:
    zookeeper-logs:
    objectstorage:
    postgres-data:
    clickhouse-data:
    redis-data:
    redis7-data:
    kafka-data:

networks:
    default:
        driver: bridge
